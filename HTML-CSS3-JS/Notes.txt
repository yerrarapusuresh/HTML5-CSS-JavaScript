======================== Section 2 ========================
HTML: Hyper Text Markup Lanugage, it is not programming Lanugage it is a markup Lanugage.

- inseted of <b> bold and <i> italic, we should use <strong> and <em> tags for symmantical purpose. 


****  create lists ****
    - we can create list two ways in HTML 
        * ordered list using <ol> tag. numbers will be generated for each item.
        * unordered list using <ul> tag.   bullets or points will be generated.
      
      eg. for shopping items.
      <p> ordred list shopping items today</p>
      <ol>
        <li> oil </li>
        <li> soaps </li>
      </ol>

      <p> unordred list shopping items today</p>
      <ul>
        <li> chicken </li>
        <li> tomotoes </li>
      </ul>


**** Embedded images in HTML page ****
    - we can embedded images with image tag <img/>
    - it is self closing tag
    - it contains following attributes
        > src: source location of image
        > alt: alternative text for search engines and disabled people
        > height and width: it will scale the image accordingly. 

**** Hyper Links using anchor tags ****
    - we can navigate to other pages or within pages using anchor tage <a></a>
    - it contains two attributes:
        >href: where it suppose to navigate. e.g href="www.google.com"
        >target: it is more or like where to open. like replace current, or open separte tab or window

    -e.g <a href="www.google.com" target="_blank">Google</a>

**** Structure HTML page ****
    - the following tags give more symmantic meaning to html page. it does not impact visually
      > header; group or aggrigate the relevent tags under this tag and justifies for the header
      > nav; group or aggrigate the relevent tags under this tag and justifies for the navigation or menu
      > article; group or aggrigate the relevent tags under this tag and justifies for main content;
      > footer; providies the footer menu such as copyright, year and owner;
    - the major idea is search engine will know much about your page when page is structurallyy defined.


**** Useful tools in VSCode ****
    - image preview
    - color highlight
    - auto rename tag
    - live server

======================== Section 3 ========================

**** Inline, internal and external CSS ****
    - Inline CSS: define style with in tag;
        > e.g <h3 style="color:red"> Hello world <h3>
        > not preferable 
    - Internal CSS: define style with in style tag in header;
        > e.g <html>
                <head>
                    <style> 
                    h3 {
                      color:red
                    }
                    </style>
                </head>
    - External CSS: decouple the styles from HTML page and maintain in separate file.
        > it will connect to through the link tag
        > e.g <html>
                <head>
                  <link href="file.css" rel="stylesheet"/>
                </head>

**** Combining Selectors ****
    - if we want apply same style for multiple tags use comma separated.
      >e.g h1, h2, h3 {
            font-size: 10px;
          }

    - if we want apply style to more specefic tag use speceficity
      >e.g h1 p {
            font-size: 10px;
          }
      > the above style will apply to only p tag with in the h1 tag.


**** id and class selectors ****




**** Inhertence in CSS ****
    - Inhertence concept is used css.
      > e.g if we apply style to body it will be applied to child elements unless it overrides.
        body {
          font-text: sans-sarif;
        }
      
      > the above text style is applied to all children in body tag unless they have style.
      > mostly this Inhertence applied to font related styles but not other style like boarder.

    - * universal selector


**** CSS Box model ****
      - it is combination of 4 things 
          > content: image, text
          > padding: white space between border and content
          > border: border around the content
          > margin: white space around the border


      - collapsing margin:Margin collapse occurs when vertically adjacent margins of block-level elements collide to share a general margin space.
                          The size of this shared space is dictated by the larger number margin.
          > If a margin of 70px collides with a margin of 90px, the 90px margin will win. 
          > If a margin of -70px collides with a margin of -90px, -90px will win.
      
      - % plays important role in responsive design. it adopts diemension by parent.
      
      - we can achive it centering by margin left and maring right setting auto.



**** Types of boxes ****
      - Block level
          > Elements are formatted visually as blocks
          > Elements are occupy  100% parent elements width, not) matter what the content is 
          > Elements stocked vertically by defualt, one after another
          > e.g body, main, header, footer, ul, ol
      - Inline elements
          > Occupies only space necessary for the content
          > causes no line breaks before and after the elements
          > box model applies in different ways: height and width do not apply.
          > padding and margins apply only horizontally not vertically
      -inline-block
          > it is combination both inline and block 
          > we adjust height of inline elements


**** Psudo elements ****
    - A CSS pseudo-element is used to style specified parts of an element.
    - below example will create psudo element after h2
      > h2::after {
              content: "TOP";
              display: inline-block;
              position: absolute;
              background-color: yellow;
              top: -10px;
              right: 127px;
          }